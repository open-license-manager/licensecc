language: cpp
services: docker

matrix:
   include:
   - os: linux
     dist: bionic
     name: "Ubuntu 18.04 - Travis CI VM"
     addons:
        apt:
          packages:
             - cmake
             - valgrind
             - libssl-dev
             - zlib1g-dev
             - libboost-dev
             - libboost-test-dev
             - libboost-filesystem-dev
             - libboost-iostreams-dev
             - libboost-program-options-dev
             - libboost-system-dev
             - libboost-thread-dev
             - libboost-date-time-dev
     script: 
         - cmake --build . --target install
         - ctest
         - ctest -T memcheck        
   - os: linux
     dist: xenial
     name: "Ubuntu 16.04 - Travis CI VM"
     addons:
        apt:
          packages:
             - cmake
             - valgrind
             - libssl-dev
             - zlib1g-dev
             - libboost-dev
             - libboost-test-dev
             - libboost-filesystem-dev
             - libboost-iostreams-dev
             - libboost-program-options-dev
             - libboost-system-dev
             - libboost-thread-dev
             - libboost-date-time-dev
   - os: linux
     dist: bionic
     name: "Ubuntu 18.04 - Travis CI VM - Debug build"
     addons:
        apt:
          packages:
             - cmake
             - valgrind
             - libssl-dev
             - zlib1g-dev
             - libboost-dev
             - libboost-test-dev
             - libboost-filesystem-dev
             - libboost-iostreams-dev
             - libboost-program-options-dev
             - libboost-system-dev
             - libboost-thread-dev
             - libboost-date-time-dev
     before_script:
         - mkdir build
         - cd build && cmake -DCMAKE_INSTALL_PREFIX=../../install -DCMAKE_BUILD_TYPE=Debug ..
     script: 
         - cmake --build . --target install
         - ctest
         - ctest -T memcheck
         
   - os: linux
     dist: bionic
     name: "CentOS-7 Docker"
     before_script: 
        - docker run --name centos7_toconfigure -v `pwd`:/root/open-license-manager centos:centos7 /bin/bash -c 
            "yum -y update && yum -y install cmake boost boost-devel boost-static openssl openssl-devel gcc-c++ valgrind valgrind-devel glibc-static centos-release-scl-rh && 
              yum -y install devtoolset-3-gcc devtoolset-3-gcc-c++ && cd /root/open-license-manager && mkdir build && cd build && 
              CC=/opt/rh/devtoolset-3/root/usr/bin/gcc XX=/opt/rh/devtoolset-3/root/usr/bin/g++ cmake .."
        - docker commit centos7_toconfigure centos7_configured
     script: 
        - docker run --name centos7_make -v `pwd`:/root/open-license-manager centos7_configured /bin/bash -c 
            "cd /root/open-license-manager/build && make && make install && VIRT_ENV=CONTAINER make test"
   - os: linux
     dist: bionic
     name: "Ubuntu 18.04 - MinGW cross-compile for Windows x64"
     addons:
        apt:
          packages:
             - cmake 
             - binutils-mingw-w64 
             - mingw-w64 
             - mingw-w64-tools 
             - mingw-w64-x86-64-dev 
             - wine-development
     before_script:
        - mkdir build
        - cd build
        - wget -c https://dl.bintray.com/boostorg/release/1.71.0/source/boost_1_71_0.tar.bz2
        - tar xjf boost_1_71_0.tar.bz2
        - sudo ln -s /usr/bin/x86_64-w64-mingw32-g++ /usr/local/bin/g++-mingw
        - cd boost_1_71_0
        - ./bootstrap.sh
        - travis_wait 30 ./b2 toolset=gcc-mingw target-os=windows address-model=64 --with-date_time --with-test --with-filesystem --with-program_options --with-regex --with-serialization --with-system runtime-link=static --prefix=./dist release install
        - cd ..
        - cmake -DCMAKE_TOOLCHAIN_FILE=../modules/toolchain-ubuntu-mingw64.cmake -DCMAKE_INSTALL_PREFIX=../../install -DBOOST_ROOT=$PWD/boost_1_71_0/dist  ..
   - os: windows
     name: "Widnows server 1803 - Visual Studio 15 2017 Win64 - (/MD)"
     env:
        - CACHE_NAME=boost
     cache:
         name: boost
         directories:
             - "/C/local/boost"
     before_script:
         - travis_wait 50 ./windows_download_boost.bat
         - cd "/C/Users/travis/build/open-license-manager/open-license-manager"
         - mkdir build
         - cd build && cmake -G "Visual Studio 15 2017 Win64" -DBOOST_ROOT="C:/local/boost" ..

   - os: windows
     name: "Widnows server 1803 - Visual Studio 15 2017 Win64 - (/MT)"
     env:
        - CACHE_NAME=boost
     cache:
         name: boost
         directories:
             - "/C/local/boost"
     before_script:
         - travis_wait 50 ./windows_download_boost.bat
         - cd "/C/Users/travis/build/open-license-manager/open-license-manager"
         - mkdir build
         - cd build && cmake -G "Visual Studio 15 2017 Win64" -DBOOST_ROOT="C:/local/boost" -DSTATIC_RUNTIME=1 ..
          
   - os: windows
     name: "Widnows server 1803 - MinGW Win64"
     before_script:
         - wget -q https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.7z
         - echo "Boost downloaded"
         - travis_wait 20 7z x boost_1_68_0.7z -oC:/local
         - cd "C:/local/boost_1_68_0"
         - dir 
         - ./bootstrap.bat gcc 
         - travis_wait 30 ./b2.exe --with-date_time --with-test --with-filesystem --with-program_options --with-regex --with-serialization --with-system runtime-link=static toolset=gcc --prefix=C:/local/boost install
         - cd C:/local/boost
         - dir
         - echo ${TRAVIS_HOME}
         - cd "/C/Users/travis/build/open-license-manager/open-license-manager"
         - mkdir build
         - cd build && cmake -G "MinGW Makefiles" -DBOOST_ROOT="C:/local/boost" 
         
env:
    - CTEST_OUTPUT_ON_FAILURE=1      
    
before_script:
    - mkdir build
    - cd build && cmake -DCMAKE_INSTALL_PREFIX=../../install ..

script: 
    - cmake --build . --target install --config Release
    - ctest -C Release
    
